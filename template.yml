Transform: AWS::Serverless-2016-10-31

Parameters:
  PrivatePemSsmName:
    Type: String
  PublicPemSsmName:
    Type: String
  SteamApiKeySsmName:
    Type: String
  FrontendHost:
    Type: String
  ServerHost:
    Type: String

Globals:
  Function:
    Runtime: java11
    Environment:
      Variables:
        GAMES_TABLE: !Ref Games
        ACHIEVEMENTS_TABLE: !Ref Achievements
        ACHIEVEMENT_STATUS_TABLE: !Ref AchievementStatus
        USERS_TABLE: !Ref Users
        SOCIAL_LINK_TABLE: !Ref SocialLinks
        LIBRARY_TABLE: !Ref GameLibrary
        STEAM_API_KEY_NAME: !Ref SteamApiKeySsmName
        PRIVATE_PEM_NAME: !Ref PrivatePemSsmName
        PUBLIC_PEM_NAME: !Ref PublicPemSsmName
        FRONTEND_HOST: !Ref FrontendHost
        PEM_ISSUER: !Ref AWS::StackName
        JOBS_TABLE: !Ref Jobs
        SERVER_HOST: !Ref ServerHost

Resources:
  Api:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders: [ Authorization ]
        AllowMethods: [ GET, POST ]
        AllowOrigins: [ !Ref FrontendHost ]
        ExposeHeaders: [ '*' ]
      DisableExecuteApiEndpoint: true

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: [ "sts:AssumeRole"]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: dynamodb-cameras-table-crud
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: tablesCrud
                Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:DescribeTable
                  - dynamodb:ConditionCheckItem
                Resource:
                  - !GetAtt Users.Arn
                  - !GetAtt Games.Arn
                  - !GetAtt Achievements.Arn
                  - !GetAtt GameLibrary.Arn
                  - !GetAtt AchievementStatus.Arn
                  - !GetAtt SocialLinks.Arn
                  - !GetAtt Jobs.Arn
              - Sid: tableStream
                Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListShards
                  - dynamodb:ListStreams
                Resource: !GetAtt Jobs.StreamArn
              - Sid: ssm
                Effect: Allow
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:GetParametersByPath
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter${PrivatePemSsmName}
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter${PublicPemSsmName}
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter${SteamApiKeySsmName}

  SyncWorker:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 60
      Handler: io.andrewohara.cheetosbros.SyncLambdaHandler
      MemorySize: 1024
      Role: !GetAtt Role.Arn
      Events:
        WorkQueue:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt Jobs.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 5

  ApiHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 10
      Handler: io.andrewohara.cheetosbros.ApiLambdaHandler
      MemorySize: 1024
      Role: !GetAtt Role.Arn
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref Api

  Users:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  Games:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH

  Achievements:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: gameUuid
          AttributeType: S
        - AttributeName: achievementId
          AttributeType: S
      KeySchema:
        - AttributeName: gameUuid
          KeyType: HASH
        - AttributeName: achievementId
          KeyType: RANGE

  GameLibrary:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: playerUuid
          AttributeType: S
        - AttributeName: gameId
          AttributeType: S
      KeySchema:
        - AttributeName: playerUuid
          KeyType: HASH
        - AttributeName: gameId
          KeyType: RANGE

  AchievementStatus:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: playerAndGameId
          AttributeType: S
        - AttributeName: achievementId
          AttributeType: S
      KeySchema:
        - AttributeName: playerAndGameId
          KeyType: HASH
        - AttributeName: achievementId
          KeyType: RANGE

  SocialLinks:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: playerUuid
          AttributeType: S
      KeySchema:
        - AttributeName: playerUuid
          KeyType: HASH

  Jobs:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: jobId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: jobId
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
