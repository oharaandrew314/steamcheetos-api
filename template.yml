Transform: AWS::Serverless-2016-10-31

Parameters:
  SteamApiKey:
    Type: AWS::SSM::Parameter::Value<String>
  CorsOrigins:
    Type: CommaDelimitedList
  ServerHost:
    Type: String
  KeyAdminUsername:
    Type: String
    Description: IAM name of user that will admin the key

Globals:
  Function:
    Runtime: java11
    MemorySize: 2048
    Environment:
      Variables:
        AUTH_KEY_ID: !Ref EncryptionKey
        GAMES_TABLE: !Ref Games
        ACHIEVEMENTS_TABLE: !Ref Achievements
        STEAM_API_KEY: !Ref SteamApiKey
        CORS_ORIGINS: !Join [ ',', !Ref CorsOrigins ]
        SERVER_HOST: !Ref ServerHost
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Resources:
  Api:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders: [ Authorization ]
        AllowMethods: [ GET, POST ]
        AllowOrigins: !Ref CorsOrigins
        ExposeHeaders: [ '*' ]
      DisableExecuteApiEndpoint: true

  ApiHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 10
      Handler: io.andrewohara.cheetosbros.ApiLambdaHandler
#      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Games
        - DynamoDBCrudPolicy:
            TableName: !Ref Achievements
        - KMSEncryptPolicy:
            KeyId: !Ref EncryptionKey
        - KMSDecryptPolicy:
            KeyId: !Ref EncryptionKey
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref Api

  EncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:user/${KeyAdminUsername}
            Action:
              - kms:*
            Resource: '*'
      KeySpec: RSA_2048
      KeyUsage: ENCRYPT_DECRYPT

  Games:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE

  Achievements:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: libraryId
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: libraryId
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
